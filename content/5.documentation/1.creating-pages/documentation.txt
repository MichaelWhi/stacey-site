title: Creating Pages
-
content:

Creating Pages        {#intro}
==============

Each folder within _/content_ which contains a .txt file will become a page.
So to create a new page, you just have to make a new folder then create a .txt file within it. The name of the .txt file will tell stacey which [template][] it should use for that page.

Pages are listed in reverse-numeric order using a numbered prefix on the folder name (_10._ _9._ _8._, etc.). The url used to access each page will be the folder name minus the number and dot.

<i>ie. a folder named: _1.project-name-10_ will be accessed via http://yourdomain.com/projects/_project-name-10_.</i>

If you leave the numbered prefix off a folder, then the page will not show up in any collections ($siblings, $children, etc.), but will still be accessible by its url. This is useful for creating ‘floating’ pages.

When naming your folders, rather than using underscores (_), you should use hyphens (-) to separate words.

<i>ie. _1.project-name_ rather than _1.project_name_ or _1.project name_.</i>

Stacey supports unlimited depths of sub-pages, so you can split your categories into sub-categories & sub-sub-categories. Whatever works for you.

### Images            {#images}

Stacey picks up any images within the page’s folder and automatically inserts them into the page. Like pages themselves, the images are displayed in reverse-numeric order.
![Screenshot of project images](/images/projects-images-list.png)

Images are inserted as is, so they will need to be cropped to the correct size before being added to the folder. The default template relies on images with a maximum width of _560px_. Images get collated into a partial named _&#58;images_, which can be inserted anywhere within a template file.

### Other assets    {#other-assets}

Video & .swf files are embedded & included in the same way as images (collated into _&#58;swf_ & _&#58;video_ partials), whereas the content within any _.html_ files will be inserted in place of the _&#58;html_ partial. This is useful for embedding Youtube or Vimeo videos in the page.

<i>.swf or video files will need to be named after the file’s dimensions. ie. 1._800x600_.mp4 — where _800_ is the movie’s width & _600_ is its height.</i>

In addition, stacey will recognise any other assets placed within a page’s folder. Read more about [handling other asset types][].

### Thumbnails        {#thumbnails}

Each page can also have its own thumbnail. They can be added by placing a image file named _thumb_ (.gif, .jpg or .png) within the page’s folder.

In the default templates, thumbnails are hidden using css. To turn their display back on you need to edit the main css file (in _/public/docs/css/screen.css_).
![Screenshot of CSS file location](/images/css-file-location.png)

towards the bottom of the file, find the line that reads:

<pre>
img.project-thumb { ... <em>display: none;</em> }
</pre>

and change it to read:

<pre>
img.project-thumb { ... <em>display: inline;</em> }
</pre>

Your thumbnails can be any size you like, but on the default template are designed to be relatively small.

[template]: /documentation/editing-templates/#template-assignment
[handling other asset types]: /documentation/editing-templates/assets/